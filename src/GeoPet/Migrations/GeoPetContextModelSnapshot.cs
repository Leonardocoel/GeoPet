// <auto-generated />
using System;
using GeoPet.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeoPet.Migrations
{
    [DbContext(typeof(GeoPetContext))]
    partial class GeoPetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeoPet.DataContract.Model.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CEP = "01001000",
                            Email = "admin@email.com",
                            Name = "Admin",
                            Password = "$2b$10$i/dgw2inj3yD4cH0cbvBJ.i6cR/uZqYTua3Ao7wmsk/mytI1opAbS"
                        },
                        new
                        {
                            Id = 2,
                            CEP = "01001000",
                            Email = "email@email.com",
                            Name = "Pessoa1",
                            Password = "$2b$10$i/dgw2inj3yD4cH0cbvBJ.i6cR/uZqYTua3Ao7wmsk/mytI1opAbS"
                        },
                        new
                        {
                            Id = 3,
                            CEP = "01001000",
                            Email = "email2@email.com",
                            Name = "Pessoa2",
                            Password = "$2b$10$i/dgw2inj3yD4cH0cbvBJ.i6cR/uZqYTua3Ao7wmsk/mytI1opAbS"
                        });
                });

            modelBuilder.Entity("GeoPet.DataContract.Model.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Pet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08148b33-d29c-41b8-b797-ec903d9ede71"),
                            Age = 6,
                            Breed = "Pug",
                            Name = "Pet2",
                            OwnerId = 2,
                            Size = "pequeno"
                        },
                        new
                        {
                            Id = new Guid("e646f236-e19d-4c3a-99b9-1fd09e21eb4f"),
                            Age = 6,
                            Breed = "Pug",
                            Name = "Pet3",
                            OwnerId = 2,
                            Size = "pequeno"
                        },
                        new
                        {
                            Id = new Guid("d386421c-b9dd-46f0-8ec1-5d788c1a33a6"),
                            Age = 5,
                            Breed = "Pastor-alemão",
                            Name = "Pet1",
                            OwnerId = 3,
                            Size = "grande"
                        });
                });

            modelBuilder.Entity("GeoPet.DataContract.Model.Pet", b =>
                {
                    b.HasOne("GeoPet.DataContract.Model.Owner", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GeoPet.DataContract.Model.Owner", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
